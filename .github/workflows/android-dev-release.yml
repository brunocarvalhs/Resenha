# name: Resenha App PlayStore Release

# on:
#   push:
#     branches: [develop]

# jobs:
#   test: 
#     name: Test, build and release
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v1
#     - name: Install Flutter
#       uses: subosito/flutter-action@v1.3.2
#     - name: Install app dependencies
#       run: flutter pub get
#     - name: Test app
#       run: flutter test
#   build:
#     name: Build APK and Create release
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v1
#       - name: Setup Java
#         uses: actions/setup-java@v1
#         with:
#           java-version: '12.x'
#       - name: Setup Flutter
#         uses: subosito/flutter-action@v1
#         with:
#           channel: beta
#       - name: Flutter version
#         run: flutter --version
#       - name: Cache pub dependencies
#         uses: actions/cache@v2
#         with:
#           path: ${{ env.FLUTTER_HOME }}/.pub-cache
#           key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
#           restore-keys: ${{ runner.os }}-pub-
#       - name: Download pub dependencies
#         run: flutter pub get
#       - name: Run build_runner
#         run: flutter pub run build_runner build --delete-conflicting-outputs
#       - name: Download Android keystore
#         id: android_keystore
#         uses: timheuer/base64-to-file@v1.0.3
#         with:
#           fileName: key.jks
#           encodedString: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
#       - name: Create key.properties
#         run: |
#           echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
#           echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
#           echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
#           echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
#       - name: Build Android App Bundle
#         run: flutter build appbundle
#       - name: Build Android APK
#         run: flutter build apk --release --split-per-abi
#       - name: Upload app bundle
#         uses: actions/upload-artifact@v2
#         with:
#           name: appbundle
#           path: build/app/outputs/bundle/release/app-release.aab


# name: Resenha App PlayStore Release

# on:
#   push:
#     branches: [master]

# jobs:
#   test: 
#     name: Test, build and release
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v1
#       - name: Setup Java
#         uses: actions/setup-java@v1
#         with:
#           java-version: '12.x'
#       - name: Setup Flutter
#         uses: subosito/flutter-action@v1
#         with:
#           channel: beta
#       - name: Flutter version
#         run: flutter --version
#       - name: Cache pub dependencies
#         uses: actions/cache@v2
#         with:
#           path: ${{ env.FLUTTER_HOME }}/.pub-cache
#           key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
#           restore-keys: ${{ runner.os }}-pub-
#         - name: Download pub dependencies
#           run: flutter pub get
#         - name: Run build_runner
#           run: flutter pub run build_runner build --delete-conflicting-outputs
#         - name: Run analyzer
#           run: flutter analyze
#         - name: Run tests
#           run: flutter test
#   build:
#     name: Build APK and Create release
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v1
#       - name: Setup Java
#         uses: actions/setup-java@v1
#         with:
#           java-version: '12.x'
#       - name: Setup Flutter
#         uses: subosito/flutter-action@v1
#         with:
#           channel: beta
#       - name: Flutter version
#         run: flutter --version
#       - name: Cache pub dependencies
#         uses: actions/cache@v2
#         with:
#           path: ${{ env.FLUTTER_HOME }}/.pub-cache
#           key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
#           restore-keys: ${{ runner.os }}-pub-
#         - name: Download pub dependencies
#           run: flutter pub get
#         - name: Run build_runner
#           run: flutter pub run build_runner build --delete-conflicting-outputs
#         - name: Download Android keystore
#           id: android_keystore
#           uses: timheuer/base64-to-file@v1.0.3
#           with:
#             fileName: key.jks
#             encodedString: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
#         - name: Create key.properties
#           run: |
#             echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
#             echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
#             echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
#             echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
#         - name: Build Android App Bundle
#           run: flutter build appbundle
#         - name: Build Android APK
#           run: flutter build apk --release --split-per-abi
#         - name: Upload app bundle
#           uses: actions/upload-artifact@v2
#           with:
#             name: appbundle
#             path: build/app/outputs/bundle/release/app-release.aab
#   release:
#     name: Release app to internal track
#     needs: [build]
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v1
#       - name: Get appbundle from artifacts
#         uses: actions/download-artifact@v2
#         with:
#           name: appbundle
#       - name: Release app to internal track
#         uses: r0adkll/upload-google-play@v1
#         with:
#           serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
#           packageName: ${{ secrets.PACKAGE_NAME }}
#           releaseFile: app-release.aab
#           track: internal
#           whatsNewDirectory: distribution/whatsnew

name: Demo App PlayStore Release

on:
  push:
    branches: [ develop ]

jobs:
  version:
    name: Create version number
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Fetch all history for all tags and branches
      run: |
        git config remote.origin.url https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}
        git fetch --prune --depth=10000
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.3
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      with:
          versionSpec: '5.x'
    - name: Use GitVersion
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.3
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      inputs:
        useConfigFile: true
        configFilePath: 'GitVersion.yml'
        additionalArguments: ''
    - name: Create version.txt with nuGetVersion
      run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt
    - name: Upload version.txt
      uses: actions/upload-artifact@v2
      with:
        name: gitversion
        path: version.txt
  build:
    name: Build APK and Create release
    needs: [ version ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Get version.txt
      uses: actions/download-artifact@v2
      with:
        name: gitversion
    - name: Create new file without newline char from version.txt
      run: tr -d '\n' < version.txt > version1.txt
    - name: Read version
      id: version
      uses: juliangruber/read-file-action@v1
      with:
        path: version1.txt
    - name: Update version in YAML
      run: sed -i 's/99.99.99+99/${{ steps.version.outputs.content }}+${{ github.run_number }}/g' pubspec.yaml
    - name: Update KeyStore password in gradle properties
      run: sed -i 's/#{KEYSTORE_PASS}#/${{ secrets.KEYSTORE_PASS }}/g' android/key.properties
    - name: Update KeyStore key password in gradle properties
      run: sed -i 's/#{KEYSTORE_KEY_PASS}#/${{ secrets.KEYSTORE_KEY_PASS }}/g' android/key.properties
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@v1
      with:
        flutter-version: '1.17.0'
    - run: flutter pub get
    - run: flutter test
    - run: flutter build apk --release --split-per-abi
    - run: flutter build appbundle
    - name: Create a Release in GitHub
      uses: ncipollo/release-action@v1
      with:
        artifacts: "build/app/outputs/apk/release/*.apk,build/app/outputs/bundle/release/app-release.aab"
        token: ${{ secrets.GH_TOKEN }}
        tag: ${{ steps.version.outputs.content }}
        commit: ${{ github.sha }}
    - name: Upload app bundle
      uses: actions/upload-artifact@v2
      with:
        name: appbundle
        path: build/app/outputs/bundle/release/app-release.aab
  release:
    name: Release app to internal track
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Get appbundle from artifacts
      uses: actions/download-artifact@v2
      with:
        name: appbundle
    - name: Release app to internal track
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
        packageName: com.fluttercicddemo
        releaseFile: app-release.aab
        track: internal
        whatsNewDirectory: distribution/whatsnew