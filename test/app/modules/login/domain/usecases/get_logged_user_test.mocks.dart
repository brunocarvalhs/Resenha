// Mocks generated by Mockito 5.0.15 from annotations
// in resenha/test/app/modules/login/domain/usecases/get_logged_user_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:resenha/app/modules/login/domain/entities/logged_user_information.dart'
    as _i6;
import 'package:resenha/app/modules/login/domain/errors/errors.dart' as _i5;
import 'package:resenha/app/modules/login/domain/repositories/login_repository.dart'
    as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

// ignore: camel_case_types
class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [LoginRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginRepository extends _i1.Mock implements _i3.LoginRepository {
  MockLoginRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.ErrorGoogleLogged, _i6.LoggedUserInformation>>
      loginGoogle() => (super.noSuchMethod(Invocation.method(#loginGoogle, []),
          returnValue:
              Future<_i2.Either<_i5.ErrorGoogleLogged, _i6.LoggedUserInformation>>.value(
                  _FakeEither_0<_i5.ErrorGoogleLogged,
                      _i6.LoggedUserInformation>())) as _i4
          .Future<_i2.Either<_i5.ErrorGoogleLogged, _i6.LoggedUserInformation>>);
  @override
  _i4.Future<_i2.Either<_i5.ErrorLoggedUser, _i6.LoggedUserInformation>>
      loggedUser() => (super.noSuchMethod(Invocation.method(#loggedUser, []),
          returnValue:
              Future<_i2.Either<_i5.ErrorLoggedUser, _i6.LoggedUserInformation>>.value(
                  _FakeEither_0<_i5.ErrorLoggedUser,
                      _i6.LoggedUserInformation>())) as _i4
          .Future<_i2.Either<_i5.ErrorLoggedUser, _i6.LoggedUserInformation>>);
  @override
  _i4.Future<_i2.Either<_i5.ErrorLogout, _i2.Unit>> logout() =>
      (super.noSuchMethod(Invocation.method(#logout, []),
              returnValue: Future<_i2.Either<_i5.ErrorLogout, _i2.Unit>>.value(
                  _FakeEither_0<_i5.ErrorLogout, _i2.Unit>()))
          as _i4.Future<_i2.Either<_i5.ErrorLogout, _i2.Unit>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [LoginRepository].
///
/// See the documentation for Mockito's code generation for more information.
class LoginRepositoryMockGetLoggedUser extends _i1.Mock
    implements _i3.LoginRepository {
  @override
  _i4.Future<_i2.Either<_i5.ErrorGoogleLogged, _i6.LoggedUserInformation>>
      loginGoogle() => (super.noSuchMethod(Invocation.method(#loginGoogle, []),
          returnValue:
              Future<_i2.Either<_i5.ErrorGoogleLogged, _i6.LoggedUserInformation>>.value(
                  _FakeEither_0<_i5.ErrorGoogleLogged,
                      _i6.LoggedUserInformation>())) as _i4
          .Future<_i2.Either<_i5.ErrorGoogleLogged, _i6.LoggedUserInformation>>);
  @override
  _i4.Future<_i2.Either<_i5.ErrorLoggedUser, _i6.LoggedUserInformation>>
      loggedUser() => (super.noSuchMethod(Invocation.method(#loggedUser, []),
          returnValue:
              Future<_i2.Either<_i5.ErrorLoggedUser, _i6.LoggedUserInformation>>.value(
                  _FakeEither_0<_i5.ErrorLoggedUser,
                      _i6.LoggedUserInformation>())) as _i4
          .Future<_i2.Either<_i5.ErrorLoggedUser, _i6.LoggedUserInformation>>);
  @override
  _i4.Future<_i2.Either<_i5.ErrorLogout, _i2.Unit>> logout() =>
      (super.noSuchMethod(Invocation.method(#logout, []),
              returnValue: Future<_i2.Either<_i5.ErrorLogout, _i2.Unit>>.value(
                  _FakeEither_0<_i5.ErrorLogout, _i2.Unit>()))
          as _i4.Future<_i2.Either<_i5.ErrorLogout, _i2.Unit>>);
  @override
  String toString() => super.toString();
}
